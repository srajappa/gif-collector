version: '3.8'

services:
  jupyter:
    build: .
    container_name: playwright-screencast
    ports:
      - "${JUPYTER_PORT:-8888}:8888"
    environment:
      - JUPYTER_TOKEN=${JUPYTER_TOKEN:-docker-screencast-token}
      - DEFAULT_VIEWPORT_WIDTH=${DEFAULT_VIEWPORT_WIDTH:-1920}
      - DEFAULT_VIEWPORT_HEIGHT=${DEFAULT_VIEWPORT_HEIGHT:-1080}
      - SLOW_MO_DELAY=${SLOW_MO_DELAY:-1000}
      - HEADLESS_MODE=${HEADLESS_MODE:-false}
      - OUTPUT_DIR=${OUTPUT_DIR:-/app/output/screencasts}
      - VIDEO_FORMAT=${VIDEO_FORMAT:-webm}
    volumes:
      # Mount source code for development
      - ./src:/app/src
      - ./notebooks:/app/notebooks
      - ./scripts:/app/scripts
      - ./tests:/app/tests
      # Mount output directory for persistent storage
      - ./output:/app/output
      # Mount logs directory
      - ./logs:/app/logs
    working_dir: /app
    restart: unless-stopped
    # Increase shared memory size for browser stability
    shm_size: 2gb
    # Security options
    security_opt:
      - seccomp:unconfined
    # Resource limits
    mem_limit: 4g
    cpus: 2.0
    # Health check
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/api" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching (if needed for complex workflows)
  redis:
    image: redis:7-alpine
    container_name: playwright-screencast-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - cache

  # Optional: Nginx for reverse proxy (if needed for production)
  nginx:
    image: nginx:alpine
    container_name: playwright-screencast-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./output:/usr/share/nginx/html/output
    depends_on:
      - jupyter
    restart: unless-stopped
    profiles:
      - proxy

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: playwright-screencast-network
